events {}

http {
    upstream flask_app {
        server webapp:5000; # Assuming 'webapp' is the service name in docker-compose.yml
    }

    server {
        listen 8080;
        server_name group-39.comp3334.xavier2dc.fr;

        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    

    server {
        listen 8443 ssl;
        server_name group-39.comp3334.xavier2dc.fr;

        # SSL configuration
        ssl_certificate /etc/nginx/group-39.comp3334.xavier2dc.fr.crt;
        ssl_certificate_key /etc/nginx/group-39.comp3334.xavier2dc.fr.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
        # ssl_dhparam /path/to/dhparam;

        # intermediate configuration
        ssl_protocols TLSv1.3;
        ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;
        # ssl_ciphers TLS_CHACHA20_POLY1305_SHA256;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (1 week)
        add_header Strict-Transport-Security "max-age=604800; includeSubDomains; preload";
        
        # XSS prevetion
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        add_header X-XSS-Protection "1; mode=block";

        # OCSP stapling
        ssl_stapling off;
        ssl_stapling_verify off;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

        # replace with the IP address of your resolver
        # resolver 127.0.0.1;
        
	

        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
